import React from "react";
import styles from "./style.module.scss";

export const TasksPage = () => {
  return (
    <div className={"container " + styles.tasks}>
      Задание. Подготовить часть интернет-магазина с использованием React и
      TypeScript https://www.figma.com/file/UyRTxOVJvoMyjlcr70eH66
      <ul className={styles.done}>
        <li>
          1. Подготовить JSON набор данных, чтобы удобно было проверять работу
        </li>
        (17+ товаров должно быть в стартовом наборе)
        <li>- Url картинки</li>
        <li>- название</li>
        <li>- тип размера (вес/объем)</li>
        <li>- размер</li>
        <li>- штрихкод</li>
        <li>- производитель</li>
        <li>- Бренд</li>
        <li>- описание</li>
        <li>- цена</li>
      </ul>
      <ul>
        <li className={styles.done}>
          2. Подготовить страницу Каталога товаров (список товаров)
        </li>
        <li className={styles.todo}>
          2.0. Здесь и в других местах верстку обеспечиваем в том числе
          адаптивную
        </li>
        <li className={styles.done}>
          2.1. Шапка и подвал также должны быть сверстаны (но функциональный там
          только блок с корзиной)
        </li>
        <li className={styles.done}>
          2.2. Сортировку делаем (4 варианта - по цене и по названию, по
          убыванию и возрастанию)
        </li>
        <li className={styles.done}>
          2.3. Переключение способа карточек (рядом с сортировкой не делаем -
          можно даже не верстать)
        </li>
        <li className={styles.done}>
          2.4. Фильтр уход за телом/ Уход за руками - делаем.
        </li>
        <li className={styles.done}>
          2.4.1. Чтобы нормально тестировать, в карточке товара добавляем поле
          "тип ухода". Один товар может подходить к нескольким типам (например,
          одновременно уход за руками и уход за лицом)
        </li>
        <li className={styles.done}>
          2.5. В фильтре слева Достаточно оставить только
        </li>
        <li className={styles.done}>- фильтр по цене</li>
        <li className={styles.done}>
          - по производителю (поиск, чекбоксы, показать все - поле поиск здесь
          фильтрует самих производителей)
        </li>
        <li className={styles.done}>
          - Уход за телом (здесь пункты продублировать те же, что и в перечне
          над каталогом товаров (Уход за телом, уход за руками, уход за
          ногами...) - нажали сверху, выбралось и слева и наоборот).
        </li>
        <li className={styles.done}>- остальное из левого столбца не надо</li>

        <li className={styles.done}> 2.6. Кнопки постраничного перехода</li>
        <li className={styles.done}>
          {" "}
          2.7. Нажав на название можно перейти на карточку товара
        </li>
      </ul>
      <ul className={styles.done}>
        <li>3. Страница карточки товара.</li>
        <li>
          - хлебные крошки пишем упрощенные (Главная - Каталог - Название
          товара)
        </li>
        <li>
          - картинка - блок справа (данные подставляются из JSON/ Local
          Stroage).
        </li>
        <li>
          Если данных нет (Например, "в наличии"), то делаем просто статической
          версткой
        </li>
        <li>-- поделиться и прайс-лист не активны</li>
        <li>-- в корзину и +/- активно .</li>
        <li>- Похожие товары НЕ ДЕЛАЕМ</li>
        <li>Недавно просмотренные НЕ ДЕЛАЕМ</li>
      </ul>
      <ul className={styles.done}>
        4. Корзина.
        <li>4.1. Блок в шапке обновляется при действиях пользователя</li>
        <li>
          4.2. На странице корзины кнопки активны. +/-, удалить из корзины
        </li>
      </ul>
      <ul className={styles.done}>
        5. В корзине после кнопки "оформить заказ" сразу отображаем "Спасибо за
        заказ" и очищаем корзину.
      </ul>
      <ul className={styles.todo}>
        <li>6. Предусмотреть микроадминку по управлению списком товаров.</li>{" "}
        <li>- редактировать, добавлять, удалять товары.</li>{" "}
        <li>- cохранять это в localStorage.</li>
        <li>
          - eсли список пуст (админ все удалил или с самого старта), то
          наполнение из json(см п 1)
        </li>
        <li>
          отдельная возможность работать со списком типов ухода. При
          добавлении/редактировании тип ухода из выпадающего списка. Типов ухода
          должна быть возможность задать несколько. Какой именно способ для
          этого выбрать - на выше усмотрение.
        </li>
      </ul>
      <ul className={styles.todo}>7. Загрузить на githubPages</ul>
      <ul className={styles.done}>
        8. Каждый товар должен открываться по своему url (можно использовать
        штрихкод в адресации, например)
      </ul>
      <ul className={styles.todo}>
        ДОПОЛНИТЕЛЬНО. Выделение выбранного в фильтрах, изменения после нажатия
        на кнопку "в корзину" и прочие эффекты, если в макете не прорисовано
        делайте просто на свое усмотрение.
      </ul>
    </div>
  );
};
